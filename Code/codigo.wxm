/* [wxMaxima batch file version 1] [ DO NOT EDIT BY HAND! ]*/
/* [ Created with wxMaxima version 15.04.0 ] */

/* [wxMaxima: title   start ]
Método del trapecio
   [wxMaxima: title   end   ] */

/* [wxMaxima: input   start ] */
numer:true;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Método de Euler
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
MetodoEuler(a, b, N, y0, g) := block(
    h: (b-a)/N,
    ti: a,
    approx: makelist(0,N+1),
    approx[1]: [ti,y0],
    for i:1 thru N do(
       approx[i+1]: [ti+h, approx[i][2] + h*g(ti,approx[i][2])],
       ti: ti+h
    ),
    return(approx)
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Método del Trapecio Explícito
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
TrapecioExplicito(a, b, N, y0, g):=block(
    h: (b-a)/N,
    ti: a,
    approx: makelist(0,N+1),
    approx[1]: [ti,y0],
    for i:1 thru N do(
       approx[i+1]: [ti+h, approx[i][2] + (h/2)*(g(ti,approx[i][2]) + g(ti+h,approx[i][2] + h*g(ti,approx[i][2])))],
       ti: ti+h
    ),
    return(approx)
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Método del Trapecio Implícito
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
IteracionFuncional(g, ti, wi, wi10, h, numiter,tolerancia):=block(
    for i:1 thru numiter do(
        wi1: wi + (h/2)*(g(ti,wi)+g(ti+h,wi10)),
        if abs(wi1-wi10)<tolerancia then return(wi1)
        else wi10:wi1
    ),
    return (wi1)
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
TrapecioImplicito(a,b,N,w0,g,numiter):= block(
    h: (b-a)/N,
    ti: a,
    approx: makelist(0,N+1),
    approx[1]: [ti, w0],
    for i:1 thru N do(
        euler: approx[i][2] + h * g(ti, approx[i][2]),
        approx[i+1]: [ti+h,IteracionFuncional(g, ti, approx[i][2], euler, h, numiter, h^4)],
        ti:ti+h
    ),
    
    return (approx)
);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: section start ]
Ejercicio
   [wxMaxima: section end   ] */

/* [wxMaxima: input   start ] */
f(t,y):=y-t^2;
a:0;
b:2;
y0:3;
N:10;
solucion(t):=exp(t) + t^2 + 2*t + 2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
l1:MetodoEuler(a, b, N, y0,f);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
solucionEuler:l1[N+1];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
h(t):=%e^t + t^2 + 2*t +2;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxplot2d([[discrete,l1],h(t)],[t,0,2],[style,[points,1,1],lines],
    [legend,"aprox","y"], [ylabel, "y(t)"]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
h:(b-a)/N$
t0:a$
sol:[y0]$
while t0<b do(
    y:y0+h*g(t0+(h/2),y0+(h/2)*g(t0,y0)),
    t:t0+h,
    sol:append(sol,[y]),
    t0:t,
    y0:y
)$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
kill(all);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
sol;
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
l2:TrapecioExplicito(a, b, N, y0, g);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
wxplot2d([[discrete,l2],h(t)],[t,0,2],[style,[points,1,1],lines],
    [legend,"aprox","y"], [ylabel, "y(t)"]);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
KahanSum(input,N):=block(
    sum:10000.0,
    c:0.0,      
    for i:1 thru N do(
        y:input[i]-c,
        t:sum+y,
        c:(t-sum)-y,
        sum:t
    ),       
    return (sum))$
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
l3:[3.14159,2.71828];
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
KahanSum(l3,2);
/* [wxMaxima: input   end   ] */

/* [wxMaxima: input   start ] */
TrapecioImplicito(a,b,N,3,f,100);
/* [wxMaxima: input   end   ] */

/* Maxima can't load/batch files which end with a comment! */
"Created with wxMaxima"$
